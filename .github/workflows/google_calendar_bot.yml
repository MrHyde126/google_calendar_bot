name: Google Calendar Bot workflow

on: [push]
  
jobs:
  tests:
    name: Install dependencies and run flake8 tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3.5.3
    - name: Set up Python
      uses: actions/setup-python@v4.7.0
      with:
        python-version: 3.11
    - name: Install dependencies
      run: | 
        python -m pip install --upgrade pip 
        pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
        pip install -r requirements.txt 
    - name: Test with flake8
      run: |
        python -m flake8
  
  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
    - name: Check out the repo
      uses: actions/checkout@v3.5.3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2.9.1 
    - name: Login to Docker 
      uses: docker/login-action@v2.2.0
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Push image to Docker Hub
      uses: docker/build-push-action@v4.1.1
      with:
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/google_calendar_bot
  
  deploy:
    name: Google Calendar Bot deployment
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
    - name: executing remote ssh commands to deploy
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.HOST }}
        port: 22
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.PASSPHRASE }}
        script: |
          sudo docker image prune -f
          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/google_calendar_bot
          sudo docker-compose stop
          sudo docker-compose rm bot
          sudo touch .env
          sudo chmod 666 .env
          sudo truncate -s 0 .env
          echo TG_BOT_TOKEN=${{ secrets.TG_BOT_TOKEN }} >> .env
          echo TG_CHAT_ID=${{ secrets.TG_CHAT_ID }} >> .env
          echo DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }} >> .env
          sudo docker-compose up -d

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: send message
      uses: appleboy/telegram-action@v0.1.1 
      with:
        to: ${{ secrets.TG_CHAT_ID }}
        token: ${{ secrets.TG_BOT_TOKEN }}
        message: ${{ github.workflow }} успешно выполнен!
